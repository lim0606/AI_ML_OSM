MU = [1 -2;-3 -5;-1,3];
SIGMA = cat(3,[1 0.5;.5 1],[1 0;0 1],[1 0;0 1]);
p = [.4,.2,.4];

MU=[0,0];
SIGMA=eye(2);
p=1;
obj = gmdistribution(MU,SIGMA,p);
y = random(obj,1000);
plot(y(:,1),y(:,2),'b.')
title('gaussian mixture')
%dP
v=ones(1,4);
p=ones(1,4);
for i=1:3
 v(i)=random('beta',1,4);
p(i)=prod(1-v(1:i-1))*v(i);
end
p(4)=prod(1-v(1:3))*v(4);
MU = [1 -2;-3 -3;-1,3;1,2];
sstd=cat(3,[.4 .3;.3 .4],[.4 0;0 .4],[.3 0;0 .3],[.6 .2;.2 .6]);
%SIGMA = cat(3,sstd(:,:,1)^2,sstd(:,:,2)^2,sstd(:,:,3)^2,sstd(:,:,4)^2);
obj = gmdistribution(MU,sstd,p);
y = random(obj,200);

 
base = [pwd '/'];
addpath([base ]);





%finite mixture
MU = [1.2 1;-1 0;-0.5,3;0.1,2];
sstd=cat(3,[.4 -.1;-.1 .4],[.2 0;0 .2],[.3 0;0 .3],[.3 .2;.2 .3]);
SIGMA = cat(3,sstd(:,:,1)^2,sstd(:,:,2)^2,sstd(:,:,3)^2,sstd(:,:,4)^2);
p = [.2,.2,.2,.4];
obj = gmdistribution(MU,SIGMA,p);
y = random(obj,200);



 
 opts = mkopts_avdp;     % for the algorithm 1
 
 opts = mkopts_csb(20);  % for the algorithm 2 with T=10 
 
 opts = mkopts_cdp(10);  % for the algorithm 3 with K=10 

 
 %bj
 
 %same logli
qq=cell(1,10); 
for iter=1:10
opts = mkopts_csb(10);
%opts = mkopts_bj(10,20);   % for the algorithm 4 with T=10 
%[result,logli] = ddp(y', opts,initt{1});
%[result,logli] = ddp2(y', opts);
[result] = vdpgm(y', opts);
%log_lik(i,:)=logli;
%haha(iter)=result.log_likelihood;
qq{iter}=result.hp_posterior.q_of_z;
[a,class]=max(qq{iter}');
clus_num(iter)=length(unique(class));
end

wei{8}=clus_num;
 



 
 num=200;
 initt=cell(1,10);
 for j=1:10
 initt{j}=rand(num,10);
 for i=1:num
 initt{j}(i,:)=initt{j}(i,:)/sum(initt{j}(i,:));
 end
 end
 %log_likeli
iter=10;
log_lik=cell(1,10);
qq=cell(1,10);
%initt{i}=ones(num,20)*0.1;

F2=cell(1,10)
for i=1:10
opts = mkopts_bj(0,20);   % for the algorithm 4 with T=10 
%[result,logli] = ddp(y', opts,initt{i});
[result] = vdpgm(y', opts);
%[result,logli] = ddp2(y', opts);
%log_lik{i}=[logli,load('logli')];
%delete('logli')
qq{i}=result.hp_posterior.q_of_z;
tmp=load('Fsss.txt');
FFs(i)=tmp(end);
end

F1=[load('F.txt'),load('Fsss.txt')]
F2=[load('F.txt'),load('Fsss.txt')]
F3=[load('F.txt'),load('Fsss.txt')]
F4=[load('F.txt'),load('Fsss.txt')]
F5=[load('F.txt'),load('Fsss.txt')]
F6=[load('F.txt'),load('Fsss.txt')]
mean(FFs)
std(FFs)
 



 
RIs=zeros(1,10);
for j=1:10 
[a,class]=max(qq{j}');
%class(find(class>3))=class(find(class>3))-1;
[AR,RI] = valid_RandIndex(label,class);
RIs(j)=RI;
end
mean(RIs)
std(RIs)
 for k=1:10
[a,class]=max(qq{k}');
 len(k)=length(unique(class));
 end  
mean(len)
std(len)

figure
hold on
colors=['b.';'g.';'r.';'m.';'y.';'k.';'c.'];
duck=unique(class);
count=1;
for i=duck
plot(y(find(class==i),1),y(find(class==i),2),colors(mod(count,7)+1,:))
count=count+1;
end
title(['bj si=10 K=20', 'cluster num ',num2str(count-1)])
end

for i=1:9
aaa(i)=log_lik{ww(i)}(end);
end



 %csb

log_lik=cell(1,10);
qq=cell(1,10);
for i=1:10
opts = mkopts_csb(10);   % for the algorithm 4 with T=10 
%[result,logli] = ddp(y', opts,initt{i});
[result] = vdpgm(y', opts);
%[result,logli] = ddp2(y', opts);
%log_lik{i}=[logli,load('logli')];
%delete('logli')
qq{i}=result.hp_posterior.q_of_z;
end


for i=1:9
subplot(3,3,i)
plot(log_lik{ww(i)})
title(['Initialization ',num2str(i)])
 end

 RIs=zeros(1,10);
 for i=1:10
[a,class]=max(qq{i}');
[AR,RI] = valid_RandIndex(label,class);
RIs(i)=RI;
 end
 mean(RI)
 std(RI)
 for k=1:10
[a,class]=max(qq{i}');
 end
hold on
colors=['b.';'g.';'r.';'m.';'y.';'k.';'c.'];
duck=unique(class);
count=1;
for i=duck
plot(y(find(class==i),1),y(find(class==i),2),colors(mod(count,7)+1,:))
count=count+1;
end
title(['cluster num ',num2str(count-1)])
end


%true:

load('data_200.mat')
for i=1:4
posterior(:,i)=p(i)*mvnpdf(y,MU(i,:),sstd(:,:,i));
end
hold on

i=1
i=4
p(i)*mvnpdf(y(77,:),MU(i,:),sstd(:,:,i))


[a,label]=max(posterior');
label(77)=1
real_likelihood=0;
for j=1:length(y)
real_likelihood=real_likelihood+log(mvnpdf(y(j,:),MU(label(j),:),sstd(:,:,label(j))));
end

[a,label]=max(result.q_of_z');

for k=1:4
log(mvnpdf(y(j,:),MU(k,:),sstd(:,:,k)))
end
figure
hold on
colors=['b.';'g.';'r.';'m.';'y.';'k.'];
for i=1:max(label)
plot(y(find(label==i),1),y(find(label==i),2),colors(i,:))
end 
plot(y(39,1),y(39,2),colors(4,:))


[a,b]=bkm_sm(y');
 F1=[201,548.5008;401,  404.5598;601,  398.9121;801,  311.2881];
for i=1:4
    for j=1:length(b{i})        
class(find(data(1,:)==b{i}(1,j)))=i;    
    end
end
%F1=load('Fsss.txt');
clus_num(i)=size(b,2);
[a,b]=bkm_bu(y');
F2=load('Fsss.txt');
[AR,RI] = valid_RandIndex(label,class);
RIs(i)=RI;

[AR,RI] = valid_RandIndex(label,part);
F3=Fs;
F4=load('Fsss.txt')
F5=load('Fsss.txt')
colors=['b*';'go';'r.';'ko';'m*';'b.'];
hold on 
 plot(F1(:,1),F1(:,2),colors(1,:))
 plot(F1,colors(1,:))
 plot(F2,colors(2,:))
 plot(F3,colors(3,:)) 
 plot(F4,colors(4,:))
 plot(F5,colors(5,:)) 
 plot(F6,colors(6,:)) 
 title('Free Energy Minimization')
 legend('top-down','bottom up','10 iter local search','cdp k=10','cdp k=20')
legend('cdp k=10','cdp k=20')
legend('csb k=10','csb k=20','bj si=0 k=10','bj si=0 k=20','bj si=10 k=10','bj si=10 k=20')


toc
colors=['b.';'g.';'r.';'m.';'y.';'k.';'c.'];
 for k=1:4
hold on
plot(b{k}(1,:),b{k}(2,:),colors(mod(k,7)+1,:))
 end
 
 
www=load('Fs');
plot(www)